/* Los ":" se les conoce como pseudo selectores (no son elementos que existen como tal en html)
lo que sigue de ":" es un pseoudo elemento  */
/* Por otro lado lo que hacemos aqui es definir variables con los colores que queremos
para nuestra pagina */
:root {
  --blanco: #ffffff;
  --oscuro: #212121;
  --primario: #ffc107;
  --secundario: #0097a7;
  --gris: #757575;
  --grisClaro: #dfe9f3;

  /* Se pueden poner variables para otras cosas*/
  /* "fuente-principal" es el ejemplo de ello */
  --fuente-principal: 3.8rem;
}

/* GLOBABLES */
/* Estos dos atributos permiten "html" y "body" nos ayudara a utilizar los rem de manera sencilla*/
html {
  font-size: 62.5%;
  box-sizing: border-box; /* La linea 20 hasta 24 permiten dimensionar las cajas en css de manera correcta,sin importar el padding, margin, etc. */
  scroll-snap-type: y mandatory;
}

/* SCROLL SNAP */
.servicios,
.navegacion-principal,
.formulario {
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  font-size: 16px; /* 1rem = 10px pero con la ventaja de que los rem se adaptan mejor a las pantallas con densidad muy alta */
  font-family: "Krub", sans-serif;
  background-image: linear-gradient(
    to top,
    var(--grisClaro) 0%,
    var(--blanco) 100%
  );
}

/* Este codigo es muy comun para definir el margen y ancho del contenedor */
.contenedor {
  max-width: 120rem;
  margin-top: 0;
  margin-right: auto;
  margin-bottom: 0;
  margin-left: auto;

  /* De manera resumida se puede usar: */
  margin: 0 auto 0 auto;
  /* o: */
  margin: 0 auto;
}

.boton {
  background-color: var(--secundario);
  color: var(--blanco);
  padding: 1rem 3rem;
  margin-top: 3rem;
  font-size: 2rem;
  text-decoration: none;
  text-transform: uppercase;
  font-weight: bold;
  border-radius: 0.5rem;
  width: 90%;
  text-align: center;
  border: none;
}

@media (min-width: 768px) {
  .boton {
    width: auto;
  }
}

.boton:hover {
    cursor: pointer;
}

.sombra {
  -webkit-box-shadow: 0px 5px 15px 0px rgba(122, 122, 122, 0.54);
  -moz-box-shadow: 0px 5px 15px 0px rgba(122, 122, 122, 0.54);
  box-shadow: 0px 5px 15px 0px rgba(122, 122, 122, 0.54);
  background-color: var(--blanco);
  padding: 2rem;
  border-radius: 1rem;
}

/* TIPOGRAFIA */
/* Design system */
h1 {
  font-size: 3.8rem;
}

h2 {
  font-size: 2.8rem;
}

h3 {
  font-size: 1.8rem;
}

h1,
h2,
h3 {
  text-align: center;
}

/* TITULOS */
.titulo span {
  font-size: 2rem;
}

/*UTILIDADES  */
.w-sm-100 {
    width: 100%;
}
@media (min-width: 768px) {
    .w-sm-100 {
        width: auto;
    }
  
}

.flex {
    display: flex;
}

.alinear-derecha {
    justify-content: flex-end;
}

/* NAVEGACION PRINCIPAL */
.nav-bg {
  background-color: var(--secundario);
}

.navegacion-principal {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .navegacion-principal {
    flex-direction: row;
    justify-content: space-between;
  }
}

.navegacion-principal a {
  display: block;
  text-align: center;
  color: var(--blanco);
  text-decoration: none;
  font-size: 2rem;
  font-weight: 700;
  /* Aqui el padding tambien se puede resumir el top, right, bottom y left como: */
  /* El padding "engorda" el item */
  padding: 1rem;
}

/* Este atributo nos permite cambiar el color de una de las opciones de
navegacion cuando el cursor esta encima de el */
.navegacion-principal a:hover {
  background-color: var(--primario);
  color: var(--oscuro);
}

/*HERO*/
/*El "padre" siempre debe tener posicion relativa para que el hijo se pueda posicionar de forma absoluta  */
.hero {
  background-image: url(../img/hero.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  height: 450px;
  position: relative;
  margin-bottom: 2rem;
}

.contenido-hero {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.7); /* Anterior */
  /* background-color: rgb(0 0 0 / 70%); */ /* Forma nueva */
  width: 100%;
  height: 100%;

  /*Este codigo se usa siempre que es necesario alinear tanto vertical como horizontalmente  */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.contenido-hero h2,
.contenido-hero p {
  color: var(--blanco);
}

.contenido-hero .ubicacion {
  display: flex;
  align-items: flex-end;
}

/* SERVICIOS */
@media (min-width: 768px) {
    .servicios {
        display: grid;
        grid-template-columns: 33.3% 33.3% 33.3%;
        column-gap: 1rem; /* Esto es como el margin de las columnas */
        /* grid-template-rows: 200px 800px; */ /* Esto es el largo de las columnas */
    
        /* Esto es lo mismo que lo anterior */
        /* grid: 200px 800px / 1fr 1fr 1fr; */
    }
  
}

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3 {
    color: var(--secundario);
    font-weight: normal;
}

.servicio p {
    line-height: 2;
    text-align: center;
}

.servicio .iconos {
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;

}

/* CONTACTO */
.formulario {
    background-color: var(--gris);
    width: min(60rem, 100%); /* Utiliza el valor mas pequeño */
    margin: 0 auto; /* Se usa margin 0 auto siempre que tengamos un elemento cuyo padre no tenga display flex, como en este caso */
    padding: 2rem;
    border-radius: 2rem;
}

.formulario fieldset {
    border: none;
}

.formulario legend {
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }

    .campo:nth-child(3),
    .campo:nth-child(4) {
        grid-column: 1 / 3; /* Con esta funcion podemos "mover" los campos a donde queramos teniendo en cuenta las coordenadas */
    }
  
}

.campo {
    margin-bottom: 1rem;
}

.campo label {
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.campo textarea {
    height: 20rem;
}

.input-text {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/* FOOTER */

.footer {
    text-align: center;
}

 

/* Esta es una forma diferente para modificar los selectores */
/* .campo input[type="text"],
.campo input[type="tel"]{
    background-color: red;
} */

/* En general css aplica el estilo segun el ultimo diseño introducido
por eso se dice que css es de estilo cascada, sin embargo tambien tiene especificidad
que hace que mientras mas especifico sea el cambio css decidira por su especificidad */

/* Ejemplos de media query tipicas:
 */

/* Para telefono */
/* @media (min-width: 480px) {
  
} */

/* Para tablet */
/* @media (min-width: 768px) {
  
} */

/* Para laptop o pc escritorio */
/* @media (min-width: 1140px) {
  
} */

/* Se considera standar */
/* @media (min-width: 1400px) {
  
} */
